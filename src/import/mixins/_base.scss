// -----------
// Grid Mixins
// -----------

/**
 * Create a grid column
 *
 * @example
 * column(4, (mobile: 1 of 2, tablet: 5));
 * column(1 of 3, (large-desktop: 1 of 4));
 * @param {integer} $span => default column value
 * @param {map} $queries => optional sass map with overrides for mobile, tablet, desktop and/or large-desktop
 * @param $susy => optional grid config
 */
@mixin column($span, $queries : (), $config : $susy) {

    float: left;

    @include mobile {
        width: span(if(map_has_key($queries, mobile), map-get($queries, mobile), $span), if($config != $susy, $config, $susy-mobile));
        margin-left: (gutter(if($config != $susy, $config, $susy-mobile)) / 2);
        margin-right: (gutter(if($config != $susy, $config, $susy-mobile)) / 2);
        @if index(map-get($queries, mobile), 'last') {
            float: right;
        }
    }
    @include tablet {
        width: span(if(map_has_key($queries, tablet), map-get($queries, tablet), $span), if($config != $susy, $config, $susy-tablet));
        margin-left: (gutter(if($config != $susy, $config, $susy-tablet)) / 2);
        margin-right: (gutter(if($config != $susy, $config, $susy-tablet)) / 2);
        @if index(map-get($queries, tablet), 'last') {
            float: right;
        }
    }
    @include desktop {
        width: span(if(map_has_key($queries, desktop), map-get($queries, desktop), $span), if($config != $susy, $config, $susy-desktop));
        margin-left: (gutter(if($config != $susy, $config, $susy-desktop)) / 2);
        margin-right: (gutter(if($config != $susy, $config, $susy-desktop)) / 2);
        @if index(map-get($queries, desktop), 'last') {
            float: right;
        }
    }
    @include large-desktop {
        width: span(if(map_has_key($queries, large-desktop), map-get($queries, large-desktop), $span), $config);
        margin-left: (gutter($config) / 2);
        margin-right: (gutter($config) / 2);
        @if index(map-get($queries, large-desktop), 'last') {
            float: right;
        }
    }

}

/**
 * Push or pull a grid column
 *
 * @example
 * column-shift('pull', 2)
 * column-shift('push', (desktop: 2, large-desktop: 1))
 * @param {string} $type => 'push' or 'pull'
 * @param {integer | map} $push => number of columns to push or a map for different devices
 * @param $susy => optional grid config
 */
@mixin column-shift($type, $push, $config : $susy) {

    position: relative;

    // Check type
    $validTypes: (push, pull);
    @if(not index($validTypes, $type)) {
        @error "Type should be 'push' or 'pull'";
    }

    // Set direction
    $direction: if($type == push, 'left', 'right');

    @if(type_of($push) == map) {
        // Check zero's
        @if(index(map_values($push), 0)) {
            @error "Invalid integer '0' found for column-shift";
        }

        // Devices
        @if(map_has_key($push, mobile)) {
            @include mobile {
                #{$direction}: span(map_get($push, mobile) wide, if($config != $susy, $config, $susy-mobile));
            }
        }
        @if(map_has_key($push, tablet)) {
            @include tablet {
                #{$direction}: span(map_get($push, tablet) wide, if($config != $susy, $config, $susy-tablet));
            }
        }
        @if(map_has_key($push, desktop)) {
            @include desktop {
                #{$direction}: span(map_get($push, desktop) wide, if($config != $susy, $config, $susy-desktop));
            }
        }
        @if(map_has_key($push, large-desktop)) {
            @include large-desktop {
                #{$direction}: span(map_get($push, large-desktop) wide, if($config != $susy, $config, $susy));
            }
        }
    } @else {
        @include mobile {
            #{$direction}: span($push wide, if($config != $susy, $config, $susy-mobile));
        }
        @include tablet {
            #{$direction}: span($push wide, if($config != $susy, $config, $susy-tablet));
        }
        @include desktop {
            #{$direction}: span($push wide, if($config != $susy, $config, $susy-desktop));
        }
        @include large-desktop {
            #{$direction}: span($push wide, if($config != $susy, $config, $susy));
        }
    }

}

/**
 * Create a grid row
 */
@mixin row() {

    margin-left: (- gutter($susy) / 2);
    margin-right: (- gutter($susy) / 2);
    @include mobile {
        margin-left: (- gutter($susy-mobile) / 2);
        margin-right: (- gutter($susy-mobile) / 2);
    }
    @include tablet {
        margin-left: (- gutter($susy-tablet) / 2);
        margin-right: (- gutter($susy-tablet) / 2);
    }
    @include desktop {
        margin-left: (- gutter($susy-desktop) / 2);
        margin-right: (- gutter($susy-desktop) / 2);
    }
    @include clearfix;

}

// --------
// Clearfix
// --------

@mixin clearfix() {
    &::after {
        clear: both;
        content: ' ';
        display: block;
    }
}
